{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,qBAAoCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGlDG,EAAO,oBAAmCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEjDA,E,IAbPL,EAAKc,iBAAiB,UAiBtB,SAAyBC,GACvBA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,OAAOlB,EAAKK,MAAMc,OAC/BC,EAAYF,OAAOlB,EAAKqB,KAAKF,OAC7BG,EAAcJ,OAAOlB,EAAKuB,OAAOJ,OAE9BK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAAG,CAGxCrB,EAAcqB,EAFAP,EAAaG,GAAaI,EAAI,IAGzCC,MAAK,SAAAN,G,OAASrB,EAAA4B,OAAOC,QAAQR,E,IAC7BS,OAAM,SAAAT,G,OAASrB,EAAA4B,OAAOG,QAAQV,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromise(event) {\n  event.preventDefault();\n\n  const inputDelay = Number(form.delay.value);\n  const inputStep = Number(form.step.value);\n  const inputAmount = Number(form.amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    const delay = inputDelay + inputStep * (i - 1);\n\n    createPromise(i, delay)\n      .then(value => Notify.success(value))\n      .catch(value => Notify.failure(value));\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","event","preventDefault","inputDelay","Number","value","inputStep","step","inputAmount","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.fe04c2d3.js.map"}